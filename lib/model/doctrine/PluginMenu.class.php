<?php

/**
 * PluginMenu
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class PluginMenu extends BaseMenu
{
    
    public function moveUp()
    {
        if ($this->getNode()->hasPrevSibling()) {
            $this->getNode()->moveAsPrevSiblingOf($this->getNode()->getPrevSibling());
        } else {
            $this->getNode()->moveAsFirstChildOf($this->getParent());
        }
        $this->save();
    }
    
    public function moveDown()
    {
        if ($this->getNode()->hasNextSibling()) {
            $this->getNode()->moveAsNextSiblingOf($this->getNode()->getNextSibling());
        } else {
            $this->getNode()->moveAsLastChildOf($this->getParent());
        }
        $this->save();
    }

    public function hasArticle()
    {
        return !is_null($this->getArticleId()) && !$this->getArticle()->getDeletedAt();
    }

    public function getCurrent()
    {
        return $this->getTable()->getCurrent($this);
    }

    public function getRoute()
    {
        if ($this->hasArticle()) {
            return sfConfig::get('sf_environment', 'prod') == 'dev' ? "/frontend_dev.php".$this->getArticle()->getRoute() : $this->getArticle()->getRoute();
        } else {
            return $this->getUrl() ? $this->getUrl() : sfContext::getInstance()->getRequest()->getUri();
        }
    }

    public function getChildren()
    {
        return $this->getNode()->getChildren();
    }
    
    public function isFirst()
    {
        return $this->hasParent() && $this->getLft()-1 == $this->getParent()->getLft();
    }
    
    public function isLast()
    {
        return $this->hasParent() && $this->getRgt()+1 == $this->getParent()->getRgt();
    }

    public function hasChildren()
    {
        return $this->getRgt() > $this->getLft() + 1;
    }

    public function getParent()
    {
        return $this->getNode()->getParent();
    }

    public function hasParent()
    {
        return $this->getLevel();
    }

    public function hasToRender(sfGuardSecurityUser $user)
    {
        // Publication (current menu or related article)
        if (!$this->isPublished() || ($this->hasArticle() && !$this->getArticle()->isPublished())) {
            return $user->hasCredential('editor');
        }
        // Permissions
        elseif ($this->getPermissions()->count()) {
            return $user->hasCredential($this->getPermissions()->toKeyValueArray('id', 'name'));
        }
        // Authentication
        elseif ($this->getRequireAuth()) {
            return $user->isAuthenticated();
        }
        // No authentication
        elseif ($this->getRequireNoAuth()) {
            return !$user->isAuthenticated();
        }
        // Default
        return true;
    }

    public function preSave($event)
    {
        parent::preSave($event);
        // Security for require or not authentication
        if ($this->getRequireAuth()) {
            $this->setRequireNoAuth(false);
        }
        if ($this->getRequireNoAuth()) {
            $this->setRequireAuth(false);
        }
        if ($this->getArticleId()) {
            $this->setUrl(null);
        }
    }

    public function getParentId()
    {
        return !$this->getNode()->isValidNode() || $this->getNode()->isRoot() ? null : $this->getParent()->getId();
    }

    public function getIndentedName()
    {
        return str_repeat('- ', $this->getLevel()).$this->getName();
    }
    
    public function render()
    {
        return $this->getImagePath() ? sprintf('<img src="%s" title="%s" alt="%s" />', $this->getImagePath(), $this->getName(), $this->getName()) : $this->getName();
    }
}