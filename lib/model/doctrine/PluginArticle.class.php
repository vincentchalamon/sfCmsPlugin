<?php

/**
 * PluginArticle
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class PluginArticle extends BaseArticle
{
    const ARTICLE = "article";
    const PARTIAL = "partial";

    public static function getSystemSlugs()
    {
        return array("homepage", "error404", "error500", "unpublished");
    }

    public function __toString()
    {
        return $this->getTitle();
    }

    public function preSave($event)
    {
        parent::preSave($event);
        // Force publication for system pages or partials
        if ($this->isSystem() || $this->isPartial()) {
            $this['started_at'] = date('Y-m-d H:i:s');
            $this['ended_at'] = null;
        }
        if ($this->getSlug() == 'homepage') {
            $this['url'] = '/';
        }
        // Strip tags for metas
        if ($this['description']) {
            $this['description'] = strip_tags($this['description']);
        }
        if ($this['keywords']) {
            $this['keywords'] = strip_tags($this['keywords']);
        }
        if ($this['title']) {
            $this['title'] = strip_tags($this['title']);
        }
    }

    public function hasMenu()
    {
        return $this->getMenu();
    }

    public function getMenu()
    {
        return $this->getMenus()->count() ? $this->getMenus()->getFirst() : false;
    }

    public function isSystem()
    {
        return in_array($this->getSlug(), self::getSystemSlugs());
    }

    public function isArticle()
    {
        return $this->getContentType() == self::ARTICLE;
    }

    public function isPartial()
    {
        return $this->getContentType() == self::PARTIAL;
    }

    public function hasRoute()
    {
        return !is_null($this->getUrl()) && strlen($this->getUrl());
    }

    public function getRoute()
    {
        return !$this->hasRoute() ? "/".$this->getSlug() : (substr($this->getUrl(), 0, 1) == "/" ? $this->getUrl() : "/".$this->getUrl());
    }

    public function getRouteName()
    {
        return $this->getSlug() != "homepage" ? "sf_cms_".$this->getSlug() : $this->getSlug();
    }
}